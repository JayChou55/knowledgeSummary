 docker run -d -p 8085:8080 -p 50000:50000 --name jenkins --link gitlab:gitlab.com -u root -v /data/jenkins:/var/jenkins_home  -v /data/maven:/usr/local/maven -v /usr/java/jdk1.8.0_11:/usr/local/jdk -v /root/.ssh:/root/.ssh -v /data1/mavenRepo/:/data1/mavenRepo/ -v /data/scripts/:/data/scripts/ -v /var/run/docker.sock:/var/run/docker.sock -v $(which docker):/usr/bin/docker  -v /usr/lib/x86_64-linux-gnu/libltdl.so.7:/usr/lib/x86_64-linux-gnu/libltdl.so.7   jenkinsci/jenkins:latest
 
 
 docker inspect jenkins  //查看环境变量 jenkins 如果执行.sh 编译文件 mvn命令无法执行，查到例如/usr/local/bin
 docker exec -it jenkins /bin/bash
 //添加软连接
 ln -s /usr/local/maven/bin/mvn /usr/local/bin/

要启动时，指定仓库地址
修改Maven安装目录下的 conf/文件夹内的setting.xml
或者 挂载地址！



-v /var/run/docker.sock:/var/run/docker.sock -v $(which docker):/usr/bin/docker  -v /usr/lib/x86_64-linux-gnu/libltdl.so.7:/usr/lib/x86_64-linux-gnu/libltdl.so.7  


docker pull tomsun28/jenkins:1.1

wget http://mirrors.jenkins.io/war-stable/latest/jenkins.war

nohup java -Xms256m -Xmx1024m -XX:MaxPermSize=512m -jar jenkins.war --ajp13Port=-1 --httpPort=8085 > jenkins.out 2>&1 &


apt-get update && \
apt-get -y install apt-transport-https \
     ca-certificates \
     curl \
     gnupg2 \
     software-properties-common && \
curl -fsSL https://download.docker.com/linux/$(. /etc/os-release; echo "$ID")/gpg > /tmp/dkey; apt-key add /tmp/dkey && \
add-apt-repository \
   "deb [arch=amd64] https://download.docker.com/linux/$(. /etc/os-release; echo "$ID") \
   $(lsb_release -cs) \
   stable" && \
apt-get update && \
apt-get -y install docker-ce


https://getintodevops.com/blog/the-simple-way-to-run-docker-in-docker-for-ci