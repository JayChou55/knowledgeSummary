docker swarm init --advertise-addr=192.168.205.10

docker service scale demo=2
docker service scale demo=5

docker service create --name mysql --env MYSQL_ROOT_PASSWORD=root --env MYSQL_DATABASE=wordpress --network demo --mount type=volume,source=mysql-data,destination=/var/lib/mysql mysql
查看
docker service ls
查看mysql运行在哪个节点
docker service ps mysql

docker service create --name wordpress -p 80:80 --env WORDPRESS_DB_PASSWORD=root --env WORDPRESS_DB_HOST=mysql --network demo wordpress

docker service create --name whoami -p 8000:8000 --network demo -d jwilder/whoami
docker service create --name clinet -d --network demo busybox sh -c "while true;do sleep 3600; done"

	
===========================================================================================================
docker stack
	docker stack deploy wordpress --compose-file=docker-compose.yml  或者-c=xxxx简写(对应第七章文件)
	
	version: '3'
		services:

		  web:
			image: wordpress
			ports:
			  - 8080:80
			environment:
			  WORDPRESS_DB_HOST: mysql
			  WORDPRESS_DB_PASSWORD: root
			networks:
			  - my-network
			depends_on:
			  - mysql
			deploy:
			  mode: replicated
			  replicas: 3
			  restart_policy:
				condition: on-failure
				delay: 5s
				max_attempts: 3
			  update_config:
				parallelism: 1
				delay: 10s

		  mysql:
			image: mysql
			environment:
			  MYSQL_ROOT_PASSWORD: root
			  MYSQL_DATABASE: wordpress
			volumes:
			  - mysql-data:/var/lib/mysql
			networks:
			  - my-network
			deploy:
			  mode: global
			  placement:
				constraints:
				  - node.role == manager

		volumes:
		  mysql-data:

		networks:
		  my-network:
			driver: overlay
======================================================
列举stack
docker stack ls 
查看详细
docker stack ps wordpress

docker stack services wordpress

docker stack deploy example --compose-file=docker-compose.yml

docker stack rm

=========================docker secret=================================================
docker secret create my-pw password  (password 是个文件 vim password)
echo "admin" | docker secret create my-pw2 -
ls /run/secrets 会有一个和密码文件名称一样的文件

docker service create --name db --secret my-pw -e MYSQL_ROOT_PASSWORD_FILE=/run/secrets/my-pw mysql


=========================docker service update==========================================
docker service update --image xiaopeng163/python-flask-demo:2.0 web
docker service update --publish-rm 8080:5000 --publish-add 8080:5000 web