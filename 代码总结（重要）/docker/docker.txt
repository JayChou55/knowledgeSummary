安装
 方法一
	yum install docker
 方法二（3.16）
	wget -qO- https://get.docker.com |sh


docker registry
	registry 是docker镜像中央存储仓库
docker info 查看信息docker驱动和存储位置
docker version

docker run 后面追加-d=true 或者-d 那么容器将会在后台模式运行
docker run没有指定--name 那么deamon会自动生成一个随机UUID

pid:容器有自己独立的进程表和1号进程
net:容器有自己独立的network info
ipc：在ipc通信的时候，需要加入额外信息来标示进程
mnt:每个容器有自己唯一的目录挂在
utc:每个容器有独立的hostname和domain


sed -i '/^SELINUX=/c\SELINUX=disabled' /etc/selinux/config
setenforce 0

搜索
docker search centos
获取镜像
docker pull
查看镜像 
docker images
docker ps
删除镜像
docker rmi


启动容器
docker run --name -h hostname
docker start -i 容器ID（开启进入容器）
停止容器 
docker stop CONTAINER ID
查看容器 
docker ps
查看运行的docker容器
docker ps 
查看所有的docker容器
docker ps -a 
查看容器端口
docker port 容器名称
查看容器进程情况
docker top web
进入容器
docker exec | docker attach
删除容器
docker rm 容器ID

查看容器详细信息
docker inspect 容器ID（或者名字）
自定义容器名字
docker run --name=name001 -i -t ubuntu /bin/bash

随机映射
docker run -d -P --name mynginx1 nginx
docker ps -l
指定映射
docker run -d -p 91:80 mynginx2 nginx 

设置容器端口映射
-p :containerPort
	docker run -p 80 -i -t ubuntu /bin/bash
-p hostPort:containerPort 
	docker run -p 8080:80 -i -t ubuntu /bin/bash
-p ip::containerPort
	docker run -p 0.0.0.0:80 -i -t ubuntu /bin/bash
-p ip:hostPort:contatinerPort
	docker run -p 0.0.0.0:8080:80 -i -t ubuntu /bin/bash

守护式容器
	长期启动并没有交互的容器
	docker run -i -t ubuntu /bin/bash
	docker run -d
	暂时推出来
	ctrl+p或者ctrl+q
	查看日志
	docker logs 容器ID
	重新进入容器
	docker attach 容器ID（重新进入容器）
	查看容器进程
	docker top 容器ID
	在运行中容器内启动新进程 格式：docker exec -d -i -t 容器名 
	docker exec -i -t dc1 /bin/bash
	
停止守护容器
	docker stop 容器名
	docker kill 容器名
镜像存储地址
/var/lib/docker

修改镜像地址
	
提交镜像	
	
构建镜像
	docker commit	通过容器构建
		docker commit -a 'hj' -m 'test' commit_test mirror001  (-a 作者名 -m 镜像信息 commit_test容器名 mirror001好像是仓库名镜像名)
		容器中有nginx服务 启动带着端口测试
		docker run -d --name nginx_web1  -p 80 mirror001 nginx -g "daemon off;"
		docker build 通过Dockerfile文件构建
	使用Dockerfile构建
	
docker的c/s模式
		unix:///var/run/docker.sock
		tcp://host:port
		fd://socketfd
	nc -U /var/run/docker.sock
	GET /info HTTP/1.1

docker远程访问-修改服务端配置
		-H tcp://host:port  如 docker -H tcp://10.211.55.5:2375 info
		unix:///path/to/socket
		fd://*or fd://socketfd
	守护进程默认配置
	-H unix:///var/run/docker.sock
	
docker客户端使用docker info默认访问的是本地Server。可以修改环境变量DOCKER_HOST改变默认连接。命令行直接输入：

export DOCKER_HOST="tcp://127.0.0.1:2375"

如果想恢复本地连接，将 DOCKER_HOST 置空即可：

export DOCKER_HOST=""	
	
启动 Docker 服务

安装完成后，使用下面的命令来启动 docker 服务，并将其设置为开机启动：

service docker start
chkconfig docker on
 
docker search centos
docker pull centos 
docker run centos /bin/echo 'Hello world'

docker ps -a
docker run --name mydocker -it centos /bin/bash
docker run -d --name mynginx nginx  
	会返回容器id，如果没有nginx，会自动下载
	-d：后台运行

docker ps -l
docker statrt CONTAINER ID

=================推荐的进入容器的方法：=====================
docker inspect --format "{{.State.Pid}" mynginx 
获取这个容器的ID 如：32439

nsenter 进入容器 如果进入不了 yum install -y util-linux
nsenter --target 32439 --mount  --uts --ipc --net --pid 进入nginx容器 32439

./in.sh mynginx
==================网络==========================
iptables -t nat -L -n
./in.sh mynginx
ping www.baidu.com

ip ro li


============数据管理===========================
数据卷
	-v/data
	-v src:dst
数据卷容器
	--volumes-
	from

docker run -it --name volume-test1	-h nginx -v /data nginx
-i:终端保持打开状态
t:启动一个tty （终端）
-h：启动主机名
-v:数据卷

	docker inspect -f {{.Volumes}} volume-test1
		
	docker run -d -p 5000:5000 --name registry

生成docker镜像
	docker build -t registry_url/namespace/csphere/centos:lastest
	docker build -t csphere/centos:7.1 . 或者./path（path地址）

启动
	docker run -d 
	docker run -it
	docker run -d -P 2222:22 大P把2222端口映射给22，可能会变
	docker run -d -p 2222:22 小p把2222固定端口映射给22 
 docker build -t csphere/mysql:5.5 .
 
docker run -d -p 8080:80 --name website csphere/php-fpm:5.4	
docker run -d -p 3306:3306 --name dbserver csphere/mysql:5.5

docker exec -it dbserver /bin/bsah 进入交互模式 进入了dbserver 输入mysql 可以 运行mysql命令了 退出 exit

删除 docker rm -f dbserver 强制删除 这个容器

docker run -d -p 3306:3306 -v host_dir:container_dir
docker run -d -p 3306:3306 -v /var/lib/docker/vfs/dir/mydata:/var/lib/mysql csphere/mysql:5.5

docker exec -it d03 /bin/bash  
	-it后是 container id  通过这种方式进入容器
	
	
	
	
	
=======================nginx示例1=================================
安装nginx
	docker run -p 8080:80 -d daocloud.io/nginx
新建一个html	
	cat index.html	
	<html>
	<h1>Docker is fun!</h1>
	</html>
复制
	docker cp index.html 容器ID://usr/share/nginx/html
访问查看是否被更换

如果需要保存
	docker commit -m 'fun' 容器ID
停止容器
	docker stop 容器ID	
	
======================Ubuntu进入演示=========================
docker run -i -t ubuntu /bin/bash
ps -ef 

====================nginx示例2=============================
	 docker run -p 80 --name web -i -t ubuntu /bin/bash
	 进入容器后
	 apt-get install -y nginx
		如果有问题 更新
		apt-get update
	apt-get install -y  vim 安装vim 
	根目录直接运行nginx
	cd /
	nginx
	退出镜像
	Ctrl+P+Q
	查看nginx端口号
	docker port web（web是这个镜像的name）
	查看web镜像进程
	docker top web
	停止
	docker stop web
	启动（此时nginx进程会没）
	docker start -i web
	启动nginx（此时分配的端口或者docker的ip也变了）
	docker exec web nginx
